@using RealEstateAuction.Enums
@{
    Layout = "~/Views/Shared/UserLayout.cshtml";
    ViewData["Title"] = "Quản lý thanh toán";
    var status = new Dictionary<PaymentStatus, string>
        {
            { PaymentStatus.Pending, "Đang chờ" },
            { PaymentStatus.Approve, "Đã phê duyệt" },
            { PaymentStatus.Refund, "Đã hoàn trả" },
            { PaymentStatus.Reject, "Đã từ chối" },
        };
    var statusStyle = new Dictionary<PaymentStatus, string>
    {
            { PaymentStatus.Pending, "badge bg-primary" },
            { PaymentStatus.Approve, "badge bg-success" },
            { PaymentStatus.Refund, "badge bg-warning" },
            { PaymentStatus.Reject, "badge bg-danger" },
        };
}
@model X.PagedList.IPagedList<Payment>
<h2>Quản lý thanh toán</h2>
<hr>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
<table class="table">
    <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Số lượng</th>
            <th scope="col">Tên người dùng</th>
            <th scope="col">Mã Giao dịch</th>
            <th scope="col" class="text-center">Trạng thái</th>
            <th scope="col" class="text-center">Mã số ngân hàng nhận</th>
            <th scope="col" class="text-center">Hành động</th>
        </tr>
    </thead>
    <tbody>
        @if(Model.Count != 0)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <th>@item.Id</th>
                    <td>
                        <p>@String.Format("{0:N0}", @item.Amount)</p>                      
                    </td>
                    <td>@item.User.FullName</td>
                    <td>@item.Code</td>
                    <td class="text-center">
                        <span class="@statusStyle[(PaymentStatus)item.Status]" style="width: 100px">
                            @status[(PaymentStatus)item.Status]
                        </span>
                    </td>
                    <td class="text-center">@item.Bank.BankAccount</td>
                    <td class="text-center">
                        @if ((PaymentStatus) item.Status == PaymentStatus.Pending)
                        {
                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle" style="width: 75px" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fa-solid fa-bars"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item text-success btnStatus" data-bs-toggle="modal"
                                           data-bs-target="#modalConfirmStatus" data-id="@item.Id" data-status="@((int)PaymentStatus.Approve)">
                                            <i class="fa-solid fa-check me-1"></i> Phê duyệt
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-warning btnStatus" data-bs-toggle="modal"
                                           data-bs-target="#modalConfirmStatus" data-id="@item.Id" data-status="@((int)PaymentStatus.Refund)">
                                            <i class="fa-solid fa-arrow-rotate-right me-1"></i>Hoàn trả
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-danger btnStatus" data-bs-toggle="modal"
                                           data-bs-target="#modalConfirmStatus" data-id="@item.Id" data-status="@((int)PaymentStatus.Reject)">
                                            <i class="fa-solid fa-xmark fa-lg me-1"></i>Từ chối
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" href="#">Chi tiết</a></li>
                                </ul>
                            </div>
                        } 
                        else
                        {
                            <a class="btn btn-primary btn-sm" style="width: 75px" href="#">Chi tiết</a>
                        }                       
                    </td>
                </tr>
            }
        }       
    </tbody>
</table>
@await Html.PartialAsync("Modals/Payment/ConfirmStatus")
@if (Model.PageCount > 1)
{
    <div class="text-center">      
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("payments", new { page = Model.PageNumber - 1 })">&lt;</a>
                </li>
                @for (int i = Model.PageNumber - 5; i <= Model.PageNumber + 5; i++)
                {
                    if (i > 0 && i <= Model.PageCount)
                    {
                        <li class="page-item @(Model.PageNumber == i ? "disabled active" : "")">
                            <a class="page-link" href="@Url.Action("payments", new { page = i })">@i</a>
                        </li>
                    }
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("payments", new { page = Model.PageNumber + 1 })">&gt;</a>
                </li>
            </ul>
        </nav>
    </div>
}
